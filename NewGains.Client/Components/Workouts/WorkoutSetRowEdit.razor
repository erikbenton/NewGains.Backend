@using NewGains.Client.Enums
<div class="row set-entry">
    <div class="col-1 step-number-col">
        @Set.SetNumber
    </div>

    <div class="col-4 weight-col target-col target-values">
        <span class="weight-target-choice">
            @switch (TargetWeightUnit)
            {
                case SetUnits.PercentIntensity:
                    @(Set.TargetPercentIntensity is not null ? Set.TargetPercentIntensity.ToString() : "n/a")
                    break;
                case SetUnits.Lbs:
                    @(Set.TargetWeightInPounds is not null ? Set.TargetWeightInPounds.ToString() : "n/a")
                    break;
                case SetUnits.Kg:
                    @(TargetWeightInKg is not null ? TargetWeightInKg.ToString() : "n/a")
                    break;
                default:
                    break;
            }
            x
            @switch (TargetRepsTimeUnit)
            {
                case SetUnits.Reps:
                    @(Set.TargetReps is not null ? Set.TargetReps.ToString() : "n/a")
                    break;
                case SetUnits.Time:
                    @(Set.TargetTime is not null ? Set.TargetTime.ToString() : "n/a")
                    break;
                default:
                    break;
            }
        </span>
    </div>

    <div class="col-3 weight-col">
        @switch (WeightUnit)
        {
            case SetUnits.PercentIntensity:
                <input type="number" class="form-control set-input" placeholder="@Set.TargetPercentIntensity" step="any" @bind-value="@Set.LoggedPercentIntensity" @bind-value:event="onchange" />
                break;
            case SetUnits.Lbs:
                <input type="number" class="form-control set-input" placeholder="@Set.TargetWeightInPounds" step="any" @bind-value="@WeightInLbs" @bind-value:event="onchange" />
                break;
            case SetUnits.Kg:
                <input type="number" class="form-control set-input" placeholder="@TargetWeightInKg" step="any" @bind-value="@WeightInKg" @bind-value:event="onchange" />
                break;
            default:
                break;
        }
    </div>

    <div class="col-3 reps-time-col">
        @switch (RepsTimeUnit)
        {
            case SetUnits.Reps:
                <input type="number" class="form-control set-input" placeholder="@Set.TargetReps" @bind-value="@Set.LoggedReps" @bind-value:event="onchange" />
                break;
            case SetUnits.Time:
                <input type="number" class="form-control set-input" placeholder="@Set.TargetTime" @bind-value="@Set.LoggedTime" @bind-value:event="onchange" />
                break;
            default:
                break;
        }
    </div>

    <div class="col-1 set-options-col">
        <button class="set-options-btn text-danger">
            <i class="fa-solid fa-trash"></i>
        </button>
    </div>
</div>