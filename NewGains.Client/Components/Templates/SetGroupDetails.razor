@using NewGains.Client.Enums
@using NewGains.Client.Extensions
<div class="set-group-card">

    <div class="set-group-title">
        <h6 class="set-group-header">
            @if (SetGroup.Exercise is not null)
            {
                <span class="set-group-name">
                    @SetGroup.Exercise.Name
                    @if (!string.Equals(SetGroup.Exercise.Category, "Bodyweight")
                   && !string.Equals(SetGroup.Exercise.Category, "Cardio"))
                    {
                        <span class="set-group-summary-dash">-</span>
                        <span class="set-group-summary-category">@SetGroup.Exercise.Category</span>
                    }
                </span>
            }
            else
            {
                <span class="set-group-name">
                    Error retrieving Exercise details...
                </span>
            }
        </h6>
    </div>

    <section class="container sets-data-table">

        <div class="row sets-column-headers">
            <div class="col-1">
            </div>
            <div class="col-2 step-number-col">
                <p>
                    #
                </p>
            </div>
            <div class="col-4 weight-col">
                <button class="btn dropdown-toggle" type="button" id="@($"weightMenuButton{SetGroup.Id}")" data-bs-toggle="dropdown" aria-expanded="false">
                    @WeightUnit.GetLabel()
                </button>
                <ul class="dropdown-menu" aria-labelledby="@($"weightMenuButton{SetGroup.Id}")">
                    <li>
                        <button type="button"
                                class="dropdown-item"
                                @onclick="@(() => SetWeightUnit(SetUnits.PercentIntensity))">
                            % PR
                        </button>
                    </li>
                    <li>
                        <button type="button"
                                class="dropdown-item"
                                @onclick="@(() => SetWeightUnit(SetUnits.Lbs))">
                            lbs
                        </button>
                    </li>
                    <li>
                        <button class="dropdown-item"
                                type="button"
                                @onclick="@(() => SetWeightUnit(SetUnits.Kg))">
                            kg
                        </button>
                    </li>
                </ul>
            </div>
            <div class="col-4 reps-time-col">
                <button class="btn dropdown-toggle" type="button" id="@($"repsTimeMenuButton{SetGroup.Id}")" data-bs-toggle="dropdown" aria-expanded="false">
                    @RepsTimeUnit.GetLabel()
                </button>
                <ul class="dropdown-menu" aria-labelledby="@($"repsTimeMenuButton{SetGroup.Id}")">
                    <li>
                        <button type="button"
                                class="dropdown-item"
                                @onclick="@(() => SetRepsTimeUnit(SetUnits.Reps))">
                            Reps
                        </button>
                    </li>
                    <li>
                        <button type="button"
                                class="dropdown-item"
                                @onclick="@(() => SetRepsTimeUnit(SetUnits.Time))">
                            Time
                        </button>
                    </li>
                </ul>
            </div>
            <div class="col-1">
            </div>
        </div>

        @{
            SetNumber = 1;
        }
        @foreach (var set in SetGroup.Sets)
        {
            <SetRowDetails Set="set" SetNumber="SetNumber" WeightUnit="WeightUnit" RepsTimeUnit="RepsTimeUnit" />
            SetNumber++;
        }
    </section>
</div>