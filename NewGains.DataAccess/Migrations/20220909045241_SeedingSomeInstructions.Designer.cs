// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewGains.DataAccess.Contexts;

#nullable disable

namespace NewGains.DataAccess.Migrations
{
    [DbContext(typeof(NewGainsDbContext))]
    [Migration("20220909045241_SeedingSomeInstructions")]
    partial class SeedingSomeInstructions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NewGains.Core.Entities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BodyPart")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BodyPart = 2,
                            Category = 0,
                            Name = "Bench Press"
                        },
                        new
                        {
                            Id = 2,
                            BodyPart = 1,
                            Category = 3,
                            Name = "Pull Up"
                        },
                        new
                        {
                            Id = 3,
                            BodyPart = 4,
                            Category = 0,
                            Name = "Squat"
                        },
                        new
                        {
                            Id = 4,
                            BodyPart = 5,
                            Category = 0,
                            Name = "Over Head Press"
                        },
                        new
                        {
                            Id = 5,
                            BodyPart = 0,
                            Category = 1,
                            Name = "Curls"
                        },
                        new
                        {
                            Id = 6,
                            BodyPart = 4,
                            Category = 4,
                            Name = "Outdoor Running"
                        });
                });

            modelBuilder.Entity("NewGains.Core.Entities.Instruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Instructions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExerciseId = 1,
                            StepNumber = 1,
                            Text = "Lie flat on the bench holding the barbell with a shoulder width pronated grip."
                        },
                        new
                        {
                            Id = 2,
                            ExerciseId = 1,
                            StepNumber = 2,
                            Text = "Retract scapula and have elbows between 45 to 90 degree angle.\r\n						 Try to tuck the shoulders down into their sockets and driven back."
                        },
                        new
                        {
                            Id = 3,
                            ExerciseId = 1,
                            StepNumber = 3,
                            Text = "Lift bar from the rack and hold above the chest with arms extended."
                        },
                        new
                        {
                            Id = 4,
                            ExerciseId = 1,
                            StepNumber = 4,
                            Text = "Breathe in and lower bar to the middle chest."
                        },
                        new
                        {
                            Id = 5,
                            ExerciseId = 1,
                            StepNumber = 5,
                            Text = "After pausing at the bottom, push the bar towards the starting position squeezing the chest."
                        },
                        new
                        {
                            Id = 6,
                            ExerciseId = 1,
                            StepNumber = 6,
                            Text = "Repeat for reps"
                        },
                        new
                        {
                            Id = 7,
                            ExerciseId = 2,
                            StepNumber = 1,
                            Text = "Hold the pull up bar with a neutral grip with arms fully extended."
                        },
                        new
                        {
                            Id = 8,
                            ExerciseId = 2,
                            StepNumber = 2,
                            Text = "Retract scapula and pull upward by bringing chest to the bar."
                        },
                        new
                        {
                            Id = 9,
                            ExerciseId = 2,
                            StepNumber = 3,
                            Text = "Pause at the top and squeeze the back before lowering slowly to the starting position."
                        },
                        new
                        {
                            Id = 10,
                            ExerciseId = 2,
                            StepNumber = 4,
                            Text = "Repeat for reps"
                        });
                });

            modelBuilder.Entity("NewGains.Core.Entities.Instruction", b =>
                {
                    b.HasOne("NewGains.Core.Entities.Exercise", "Exercise")
                        .WithMany("Instructions")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("NewGains.Core.Entities.Exercise", b =>
                {
                    b.Navigation("Instructions");
                });
#pragma warning restore 612, 618
        }
    }
}
